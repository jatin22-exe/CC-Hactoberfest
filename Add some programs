1.Program to print letters from a to z using for loop
int n;
cout<<("Enter the number till you want counting:");
cin>>n;
for(int i='a';i<='z';i++){
  cout<<i<<endl;
}
2.Concept of pointers.
#include<iostream>
using namespace std;

int main(){
    // WHAT IS A POINTER--> A DATATYPE WHICH HOLDS THE ADDRESS OF ANOTHER DATA TYPE
    int a=3;
    int *b=&a;
    // (&)--> ADDRESS OF OPERATOR
    // cout<<"The value of a is:"<<a<<endl; // THIS WILL PRINT VALUE OF A
    // (*)--> DEFERENCE OPERATOR(VALUE AT OPERATOR)
    // cout<<"The value of a is:"<<*b<<endl; // THIS WILL ALSO PRINT VALUE OF A
    // cout<<"The address of a is:"<<b<<endl; // THIS WILL PRINT ADDRESS OF A
    // cout<<"The address of a is:"<<&a<<endl; // THIS WILL PRINT ADDRESS OF A
    // cout<<"The address of b is:"<<&b<<endl;

    // Pointer to pointer
    // int** c = &b;
    // cout<<"The address of b is "<<&b<<endl;
    // cout<<"The address of b is "<<c<<endl; 
    // cout<<"The value at address c is "<<*c<<endl; 
    // cout<<"The value at address value_at(value_at(c)) is "<<**c<<endl; 

    return 0;
}
3.Introduction to call by value and call by reference
#include<iostream>
using namespace std;
int sum(int a,int b){
    int c=a+b;
    return c;
}
// THIS WILL NOT SWAP A AND B
// void swap(int a,int b){
//     int temp;
//     temp=a;
//     a=b;
//     b=temp;
// }

// BUT WHEN ADDRESS IS PASSED,THIS WORKS.
// THIS IS CALL BY REFERENCE USING POINTERS
// void swappointer(int *a,int *b){
//     int temp;
//     temp=*a;
//     *a=*b;
//     *b=temp;
// }

// THIS IS CALL BY REFERENCE USING C++ REFERENCE VARIABLES
void swapreference(int &a,int &b){
    int temp;
    temp=a;
    a=b;
    b=temp;
}
int main(){
    int x=4,y=5;
    cout<<"The sum of 4 and 5 is "<<sum(x,y)<<endl;
    cout<<"The value before swapping numbers are "<<x<<" and "<<y<<endl;
    // swap(a,b);
    // swappointer(&a,&b);
    swapreference(x,y);
    cout<<"The value after swapping numbers are "<<x<<" and  "<<y<<endl;
    

    return 0;
}
